ls
exit
ls
exit
which zsh
exit
exit
exit
let
ls
exit
ls
ls -a
ls -a
ls -A
exit
exit
exit
exit
echo $TERM
exit
[[ $TERM -eq xterm-kitty ]] && echo 'yep' || echo 'nope'
[[ $TERM -eq xterm-kitty ]] && echo 'yep' || echo 'nope'
TERM=xterm-kitten
TERM=xterm-kitten
TERM='xterm-kitten'
TERM2=xterm
exit
TERM2=xterm
[[ $TERM2 -eq xterm-kitty ]] && echo 'yep' || echo 'nope'
[[ "$TERM2" -eq 'xterm-kitty' ]] && echo 'yep' || echo 'nope'
[[ "$TERM2" == 'xterm-kitty' ]] && echo 'yep' || echo 'nope'
[[ "$TERM" == 'xterm-kitty' ]] && echo 'yep' || echo 'nope'
exit
for i in `seq 1 10`; do echo "$i"; done
for i in `seq 1 100`; do echo "$i"; done
clear
clear
exit
for i in `seq 1 100`; do echo "$i"; done
clear
bash -c "printf '\E[H\E[3J'"
exit
printf
printf --help
printf --help
printf '\E[H\E[3J'
exit
exit
exit
exit
for i in `seq 1 100`; do echo "$i"; done
clear
            printf "\e[H\e[3J"\

exit
for i in `seq 1 100`; do echo "$i"; done
clear
exit
for i in `seq 1 100`; do echo "$i"; done
clear
exit
exit
ls
ez
eza
alias ls=eza
ls
exit
ls
cd tmp
ls
mkcd test
ls
pwd
exit
cd tmp
cd
cd .config
exit
a
exit
bash -c 'exit 1' | bash -c 'exit 2' | bash -c 'exit 3'
echo $pipestatus
exit
exit
exit
print -P
exit
exit
man bindkey
bindkey
for i in `seq 1 100`; do echo "$i"; done
clear
for i in `seq 1 100`; do echo "$i"; done
exit
for i in `seq 1 100`; do echo "$i"; done
exit
clear
exit
exit
for i in `seq 1 100`; do echo "$i"; done
exit
print -rP '%n'
print -rP '%m@%n'
exit
print -rP '%F{light_greed}%n%f@%m'
print -rP '%F{light_green}%n%f@%m'
print -rP '%F{green}%n%f@%m'
echo $fg
print -rP '$fg'
print -rP '%{$fg[blue]%}$'
exit
print -rP '%{$fg[blue]%}$'
echo $g
echo $fg
print -rP '$fg'
print -rP '$fg[blue]'
print -rP '$fg[blue]a'
exit
print -rP '$fg[blue]a'
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
print -rP '%D{%H:%m}'
print -rP '%D{%h:%m}'
print -rP '%D{%h:%m}'
print -rP '%D{%h:%M}'
exit
ls
echo $cmd_duration
echo $ZSH_COMMAND_TIME
echo $ZSH_COMMAND_TIME
exit
ls
ls
exit
ls
exit
exit
echo "$((10 / 100.0))"
echo "$((10.0 / 100.0))"
exit
ls
man date
exit
ls
man date
echo "$((000000 / 100))"
man date
echo "$(date +%s%0N)"
PT="$(date +%s%0N)"
echo $PT
rev $PT
echo "${PT: -9}"
echo "${PT: 9}"
echo "${PT: -9}"
echo "${PT: 3}"
exit
PT="$(date +%s%0N)"
echo "${PT: 3}"
echo "${PT: -6}"
echo $PT
echo ${PT: 3-9}
echo ${PT::6}
echo ${PT::6}
echo ${PT:1:6}
echo ${PT:-6:6}
echo ${PT:6:6}
echo ${PT: -9}
echo ${PT: -9:}
echo ${PT: -9:1}
echo ${PT: -9:9}
echo ${PT:-9:9}
echo ${PT:0-9:9}
echo ${PT::9}
echo $PT
echo $PT
echo ${PT::9}
echo ${PT::-9}
echo ${PT::-1}
echo ${PT:: -1}
echo ${PT: : -1}
ELAPSED="$(($(date +%s%0N) - $PT))"
echo $ELAPSED
echo ${(r(15)(0))ELAPSED}
printf %03d 10
printf %03d '10'
man prinft
man printf
printf '%03d' '10'
printf '%03d' '10'
bash -c 'printf 03d 10'
bash -c 'printf %03d 10'
printf test
echo test
exit
printf %04d 1000
printf %04d 10000
printf %04d 10
exit
ls
ls
exit
exit
ls
exit
exit
ls
exit
exit
ls
exit
ls
ls
ls
ls
ls
ls
ls
ls
ls
exit
exit
ls
sleep 2
exit
ls
exit
echo $pipestatus
bash -c 'exit 1' | bash -c 'exit 2' | bash -c 'exit 3'
echo $pipestatus
exit
bash -c 'exit 1' | bash -c 'exit 2' | bash -c 'exit 3'
echo $pipestatus
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'
echo $pipestatus
exit
[ 0 ] && echo test
exit
exit
exit
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'
echo $pipestatus
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' [ $pipestatus ] && [ $pipestatus[-1] -eq 0 ] 
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' [ $pipestatus ] && [ $pipestatus[-1] -eq 0 ] && echo 'yep' || echo 'nope'
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'; [ $pipestatus ] && [ $pipestatus[-1] -eq 0 ] && echo 'yep' || echo 'nope'
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'; [ $pipestatus ] && [ "$pipestatus[-1]" -eq "0" ] && echo 'yep' || echo 'nope'
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'; [ "$pipestatus" ] && [ "$pipestatus[-1]" -eq "0" ] && echo 'yep' || echo 'nope'
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'; [ "$pipestatus" ] && [ "$pipestatus[-1]" -eq "0" ] && echo 'yep' || echo 'nope'
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'; [ "$pipestatus[-1]" -eq "0" ] && echo 'yep' || echo 'nope'
echo $test[-1]
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3'
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' | bash -c 'exit 4'
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' | bash -c 'exit 4'
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' | bash -c 'exit 4'
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' | bash -c 'exit 4'; for pipe in $pipestatus; do echo $pipe; done
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' | bash -c 'exit 4'; pstat=$pipestatus
echo $pstat
ls
echo $pstat
for pipe in $pstat; do echo $pipe; done
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' | bash -c 'exit 4'; pstat=$pipestatus[@]
for pipe in $pstat; do echo $pipe; done
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' | bash -c 'exit 4'
ls
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' | bash -c 'exit 4'
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' | bash -c 'exit 4'
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 3' | bash -c 'exit 4'
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 0' | bash -c 'exit 4'
exit
bash -c 'exit 1' | bash -c 'exit 0' | bash -c 'exit 0' | bash -c 'exit 4'
bash -c 'exit 1' | bash -c 'exit 2' | bash -c 'exit 3' | bash -c 'exit 4'
ls
bash -c 'exit 1' | bash -c 'exit 2' | bash -c 'exit 3' | bash -c 'exit 4'
exit
print -rP '%F{light_greed}%n%f@%m'
print -rP '%F{lightgreen}%n%f@%m'
print -rP '%F{lgreen}%n%f@%m'
print -rP '%F{5}%n%f@%m'
for i in `seq 1 100`; do print -rP "%F{$i}%n%f@%m"; done
print -rP '%F{gray}%n%f@%m'
print -rP '%F{grey}%n%f@%m'
spectrum_ls
for i in `seq 1 100`; do print -rP "i: %F{$i}%n%f@%m"; done
for i in `seq 1 100`; do print -rP "$i: %F{$i}%n%f@%m"; done
for i in `seq 1 100`; do print -rP "$i: %F{$i}%n%f@%m"; done
exit
rg
exit
exit
source .venv/bin/activate
exit
exit
